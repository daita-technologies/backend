Parameters:
  Bucket:
    Type: String
  IdentityPool:
    Type: String
  StagePara: 
    Type: String
  ApplicationPara: 
    Type: String
  AnnoBucket:
    Type: String

Resources:
  CognitoUnAuthorizedRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${StagePara}-${ApplicationPara}-unauthRole"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
            - Effect: "Allow"
              Principal:
                Federated: "cognito-identity.amazonaws.com"
              Action: sts:AssumeRoleWithWebIdentity
              Condition:
                StringEquals:
                  cognito-identity.amazonaws.com:aud:
                    Ref: IdentityPool
                ForAnyValue:StringLike:
                  cognito-identity.amazonaws.com:amr: unauthenticated
      Policies:
        - PolicyName: "CognitoUnAuthorizedPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "cognito-sync:*"
                Resource: "*"

  CognitoAuthorizedRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${StagePara}-${ApplicationPara}-authRole"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Federated: cognito-identity.amazonaws.com
            Action: sts:AssumeRoleWithWebIdentity
            Condition:
              StringEquals:
                cognito-identity.amazonaws.com:aud:
                  Ref: IdentityPool
              ForAnyValue:StringLike:
                cognito-identity.amazonaws.com:amr: authenticated
      Policies:
        - PolicyName: CognitoAuthorizedPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Sid: VisualEditor0
                Effect: Allow
                Action:
                  - 's3:*'
                Resource:
                  - !Join [ "", [ "arn:aws:s3:::", !Ref Bucket, "/${cognito-identity.amazonaws.com:sub}" ] ] 
                  - !Join [ "", [ "arn:aws:s3:::", !Ref Bucket, "/${cognito-identity.amazonaws.com:sub}/*" ] ] 
                  - !Join [ "", [ "arn:aws:s3:::", !Ref AnnoBucket, "/${cognito-identity.amazonaws.com:sub}" ] ] 
                  - !Join [ "", [ "arn:aws:s3:::", !Ref AnnoBucket, "/${cognito-identity.amazonaws.com:sub}/*" ] ]   
              - Sid: VisualEditor1
                Effect: Allow
                Action: 's3:ListBucket'
                Resource:   !Join [ "", [ "arn:aws:s3:::", !Ref Bucket ] ] ###"arn:aws:s3:::${Bucket}"
                Condition:
                  StringLike:
                    's3:prefix':
                      - ''
                      - /
                      - '${cognito-identity.amazonaws.com:sub}/*'
              - Sid: VisualEditor4
                Effect: Allow
                Action: 's3:ListBucket'
                Resource:   !Join [ "", [ "arn:aws:s3:::", !Ref AnnoBucket ] ] ###"arn:aws:s3:::${Bucket}"
                Condition:
                  StringLike:
                    's3:prefix':
                      - ''
                      - /
                      - '${cognito-identity.amazonaws.com:sub}/*'
              - Sid: VisualEditor2
                Effect: Allow
                Action:
                  - 's3:ListAllMyBuckets'
                  - 'kms:*'
                  - 's3:GetBucketLocation'
                  - "cognito-sync:*"
                  - "cognito-identity:*"
                Resource: '*'
              # - Sid: VisualEditor3
              #   Effect: Allow
              #   Action: 's3:*'
              #   Resource:
              #     - !Join [ "", [ "arn:aws:s3:::", !Ref Bucket, "/${cognito-identity.amazonaws.com:sub}" ] ] # TODO check enviorment app
              #     - !Join [ "", [ "arn:aws:s3:::", !Ref Bucket, "/${cognito-identity.amazonaws.com:sub}/*" ] ]   ##"arn:aws:s3:::client-data-test/${cognito-identity.amazonaws.com:sub}/*"  # TODO check enviorment app
  CognitoIdentityPoolRoles:
    Type: AWS::Cognito::IdentityPoolRoleAttachment
    Properties:
      IdentityPoolId:
        Ref: IdentityPool
      Roles:
        authenticated:
          Fn::GetAtt: [CognitoAuthorizedRole,Arn]
        unauthenticated:
          Fn::GetAtt: [CognitoUnAuthorizedRole,Arn]