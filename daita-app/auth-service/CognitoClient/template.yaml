Parameters:
  DomainUserPool:
    Type: String
  CognitoUserPool:
    Type: String
  StagePara:
    Type: String
  AuthHttpAPI:
    Type: String
Resources:
  GoogleCognitoUserPoolIdentityProvider:
    Type: AWS::Cognito::UserPoolIdentityProvider
    Properties:
      ProviderName: "Google"
      AttributeMapping:
        email: email
      ProviderDetails:
        client_id: 639730110991-9t82efunb20f6m4stek56f6ut9t0kjfu.apps.googleusercontent.com
        client_secret: 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
        authorize_scopes: profile email openid
      ProviderType: Google
      UserPoolId:
        Ref : CognitoUserPool
  GithubCognitoUserPoolIdentityProvider:
    Type: AWS::Cognito::UserPoolIdentityProvider
    Properties:
      UserPoolId: !Ref CognitoUserPool
      ProviderName: github
      ProviderDetails:
        client_id: 0cec5cf3d1f070b36b63 
        client_secret: 5929cb027e02330533a587a8e9f5d2e0fd40e48e
        attributes_request_method: POST
        oidc_issuer: !Sub "https://${AuthHttpAPI}.execute-api.${AWS::Region}.amazonaws.com/${StagePara}"
        authorize_scopes: "openid read:user user:email"
        jwks_uri: !Sub "https://${AuthHttpAPI}.execute-api.${AWS::Region}.amazonaws.com/${StagePara}/auth/github-openid-token-wrapper"
        token_url: !Sub "https://${AuthHttpAPI}.execute-api.${AWS::Region}.amazonaws.com/${StagePara}/auth/github-openid-token-wrapper"
        authorize_url: !Sub "https://${AuthHttpAPI}.execute-api.${AWS::Region}.amazonaws.com/${StagePara}/auth/github-openid-userinfo-wrapper"
        attributes_url: https://github.com/login/oauth/authorize
      ProviderType: "OIDC"
      AttributeMapping:
        email: "email"
        username: sub
  CognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    DependsOn:
      - GoogleCognitoUserPoolIdentityProvider
      - GithubCognitoUserPoolIdentityProvider
    Properties:
      UserPoolId: !Ref CognitoUserPool
      ClientName: user-pool-client
      GenerateSecret: false
      AllowedOAuthFlowsUserPoolClient: true
      CallbackURLs: 
        - !Sub https://${AuthHttpAPI}.execute-api.${AWS::Region}.amazonaws.com/${StagePara}/auth/login_social
      LogoutURLs:
        - http://localhost:3000
        - !Sub  https://${DomainUserPool}
      AllowedOAuthFlows:
        - code
        - implicit
      AllowedOAuthScopes:
        - phone
        - email
        - openid
        - profile
        - aws.cognito.signin.user.admin
      SupportedIdentityProviders:
        - COGNITO
        - github
        - Google
      AccessTokenValidity: 2
      RefreshTokenValidity: 24
      IdTokenValidity: 2
      TokenValidityUnits: 
          AccessToken: hours
          IdToken: hours
          RefreshToken: hours
      AllowedOAuthFlowsUserPoolClient: true
      ExplicitAuthFlows: 
        - ALLOW_REFRESH_TOKEN_AUTH
        - ALLOW_USER_PASSWORD_AUTH       
        - ALLOW_USER_SRP_AUTH
      PreventUserExistenceErrors: ENABLED
Outputs:
  UserPoolClientId:
    Value: !Ref CognitoUserPoolClient