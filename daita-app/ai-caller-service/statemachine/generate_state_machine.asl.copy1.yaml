StartAt: GenerateTask
States:
  GenerateTask:
    Type: Task
    Resource: 'arn:aws:states:::lambda:invoke'
    InputPath: $
    OutputPath: $.Payload
    Parameters:
      FunctionName: '${HandleGenerateStep}'
      Payload.$: $
    Next: ChoiceStageRequestAI
    Comment: >-
      Check the level of parallelism split requests into chunks and invoke
      lamndas
    Retry:
      - ErrorEquals:
          - RetriableCallerServiceError
        IntervalSeconds: 1
        MaxAttempts: 2
        BackoffRate: 1
  ChoiceStageRequestAI:
    Type: Choice
    Choices:
      - Variable: $.state
        StringEquals: Request_AI
        Next: HandleBatchRequestAI
      - Variable: $.state
        StringEquals: FINISH
        Next: UpdateStatusTask
      - Variable: $.state
        StringEquals: ERROR
        Next: UpdateStatusTask
  UpdateStatusTask:
    Type: Task
    Resource: 'arn:aws:states:::lambda:invoke'
    Next: GenerateComplete
    InputPath: $
    OutputPath: $
    Parameters:
      FunctionName: '${UpdateStatusTask}'
      Payload.$: $
    Retry:
      - ErrorEquals:
          - RetriableCallerServiceError
        IntervalSeconds: 1
        MaxAttempts: 2
        BackoffRate: 1
  HandleBatchRequestAI:
    Type: Map
    MaxConcurrency: 5
    InputPath: $
    ItemsPath: $.list_request_ai
    Parameters:
      batch.$: $$.Map.Item.Value
      current_num_retries.$: $.current_num_retries
      max_retries.$: $.max_retries
      is_retry.$: $.is_retry
      identity_id.$: $$.Execution.Input.body.identity_id
      task_id.$: $$.Execution.Input.body.task_id
    Iterator:
      StartAt: RequestAI
      States:
        RequestAI:
          Type: Task
          Resource: 'arn:aws:states:::lambda:invoke'
          ResultSelector:
            identity_id.$: $$.Execution.Input.body.identity_id
            task_id.$: $$.Execution.Input.body.task_id
            project_id.$: $$.Execution.Input.body.project_id
            project_name.$: $$.Execution.Input.body.project_name
            project_prefix.$: $$.Execution.Input.body.project_prefix
            current_num_retries.$: $.Payload.current_num_retries
            max_retries.$: $.Payload.max_retries
            batch.$: $.Payload.batch
            response.$: $.Payload.response
            is_retry.$: $.Payload.is_retry
          Parameters:
            FunctionName: '${WorkerRequestAI}'
            Payload.$: $
          ResultPath: $
          OutputPath: $
          Next: IsCheckRetry
        IsCheckRetry:
          Type: Choice
          Choices:
            - Variable: $.is_retry
              BooleanEquals: true
              Next: RequestAI
            - Variable: $.is_retry
              BooleanEquals: false
              Next: UploadToS3
        UploadToS3:
          Type: Task
          Resource: 'arn:aws:states:::lambda:invoke'
          InputPath: $
          OutputPath: $.Payload
          Parameters:
            FunctionName: '${HandlerUploadBatchToS3}'
            Payload.$: $
          End: true
    ResultPath: $
    Next: MergeResultRequestAI
  MergeResultRequestAI:
    Type: Task
    Resource: 'arn:aws:states:::lambda:invoke'
    InputPath: $
    ResultSelector:
      id_token.$: $$.Execution.Input.body.id_token
      identity_id.$: $$.Execution.Input.body.identity_id
      task_id.$: $$.Execution.Input.body.task_id
      project_id.$: $$.Execution.Input.body.project_id
      project_name.$: $$.Execution.Input.body.project_name
      project_prefix.$: $$.Execution.Input.body.project_prefix
      response.$: $.Payload.response
      state.$: $.Payload.state
      status.$: $.Payload.status
      info_update_s3.$: $.Payload.info_update_s3
      gen_id.$: $.Payload.gen_id
    Parameters:
      FunctionName: '${HandleMergeResultRequestAI}'
      Payload.$: $
    ResultPath: $
    OutputPath: $
    Next: CheckResponse
  CheckResponse:
    Type: Choice
    Choices:
      - Variable: $.response
        StringEquals: OK
        Next: HandleCompleteRequestAI
      - Variable: $.response
        StringEquals: NOT_OK
        Next: ChoiceStageRequestAI
  HandleCompleteRequestAI:
    Type: Task
    Resource: 'arn:aws:states:::lambda:invoke'
    InputPath: $
    OutputPath: $.Payload
    Parameters:
      FunctionName: '${HandleCompleteRequestAI}'
      Payload.$: $
    Next: ChoiceStageRequestAI
  GenerateComplete:
    Type: Pass
    Comment: Used for result aggregation
    End: true
TimeoutSeconds: 1800
