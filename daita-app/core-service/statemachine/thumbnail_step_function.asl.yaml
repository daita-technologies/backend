StartAt: DivideBatch
States:
  DivideBatch:
    Type: Task
    Resource: 'arn:aws:states:::lambda:invoke'
    InputPath: $
    OutputPath: $.Payload
    Parameters:
      FunctionName: '${DivideBatchImagesThumbnailFunction}'
      Payload.$: $
    Catch:
      - ErrorEquals:
          - States.Timeout
        Next: CatchErrorTaskDynamoDB
      - ErrorEquals:
          - States.ALL
        Next: CatchErrorTaskDynamoDB
        ResultPath: null
    Next: ResizeImageMap
  ResizeImageMap:
    Type: Map
    MaxConcurrency: 5
    InputPath: $
    ItemsPath: $.batches
    Parameters:
      images.$: $$.Map.Item.Value
      project_id.$: $.project_id
      data_type.$: $.data_type
    Iterator:
      StartAt: ResizeImage
      States:
        ResizeImage:
          Type: Task
          Resource: 'arn:aws:states:::lambda:invoke'  
          Parameters:
            FunctionName: '${ResizeImageThumbnailFunction}'
            Payload.$: $
          Retry:
            - ErrorEquals:
                - Lambda.TooManyRequestsException
                - Lambda.ServiceException
              IntervalSeconds: 3
              MaxAttempts: 7
              BackoffRate: 2 
          Next: End         