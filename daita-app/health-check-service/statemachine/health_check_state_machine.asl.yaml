StartAt: HealthCheckTask
States:
  HealthCheckTask:
    Type: Task
    Resource: 'arn:aws:states:::lambda:invoke'
    InputPath: $.detail
    ResultSelector:
      body.$: $.Payload.body.data
      task_id.$: $$.Execution.Input.detail.task_id
      identity_id.$: $$.Execution.Input.detail.identity_id
    ResultPath: $
    OutputPath: $
    Parameters:
      FunctionName: >-
        arn:aws:lambda:us-east-2:366577564432:function:dte-daita-app-HealthCheckService-4-GetDataFunction-xB1qzmrvMahH
      Payload:
        body.$: $
    Next: CalculateHealthCheckMap
    Comment: >-
      Check the level of parallelism, split requests into chunks and invoke
      lamndas
    Retry:
      - ErrorEquals:
          - RetriableCallerServiceError
        IntervalSeconds: 1
        MaxAttempts: 2
        BackoffRate: 1
  CalculateHealthCheckMap:
    Type: Map
    InputPath: $.body
    ItemsPath: $.ls_file_s3
    ResultPath: null
    Parameters:
      file_s3.$: $$.Map.Item.Value
      project_id.$: $.project_id
      data_table_name.$: $.data_table_name
    MaxConcurrency: 10
    Iterator:
      StartAt: CalculateHCTask
      States:
        CalculateHCTask:
          Type: Task
          Resource: 'arn:aws:states:::lambda:invoke'
          Parameters:
            FunctionName: >-
              arn:aws:lambda:us-east-2:366577564432:function:dte-daita-app-HealthCheck-CalculateHealthCheckFunc-MFkKqzw0nJbx
            Payload:
              body.$: $
          Next: UpdateDBTask
        UpdateDBTask:
          Type: Task
          Resource: 'arn:aws:states:::lambda:invoke'
          InputPath: $.Payload
          OutputPath: $.Payload.body
          Parameters:
            FunctionName: >-
              arn:aws:lambda:us-east-2:366577564432:function:dte-daita-app-HealthCheckService--UpdateDBFunction-lAX6E0DIIK1E
            Payload:
              body.$: $
          End: true
    Next: UpdateStatusTask
  UpdateStatusTask:
    Type: Task
    Resource: 'arn:aws:states:::dynamodb:updateItem'
    Parameters:
      TableName: dte-healthcheck-tasks
      Key:
        identity_id:
          S.$: $.identity_id
        task_id:
          S.$: $.task_id
      UpdateExpression: 'SET #st = :st'
      ExpressionAttributeNames:
        '#st': status
      ExpressionAttributeValues:
        ':st':
          S: FINISH
    ResultPath: $.DynamoDB
    End: true
TimeoutSeconds: 6000
