AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  SAM Template for Nested application resources

## The general rule seems to be to use !Sub for in line substitutions and !ref for stand alone text
Parameters:
 
  StagePara:
    Type: String
  
  ImageSegmentUrl:
    Type: String
    Default: 737589818430.dkr.ecr.us-east-2.amazonaws.com/ai-services-repo:segformer
  
  ApplicationPara:
    Type: String

  TableAnnoDataOriginalNameStream:
    Type: String

  LambdaRoleArn:
    Type: String

  CommonCodeLayerRef:
    Type: String

  ContainerPath:
    Type: String
    Default: /app/data

  TableAnnoDataOriginalName:
    Type: String
Resources:


  #================ APPLICATIONS  =============================================
  RoleApplication:
    Type: AWS::Serverless::Application
    Properties:
      Location: ./role.yaml 

  NetworkLayerApplication:
    Type: AWS::Serverless::Application
    Properties:
      Location: ./network.yaml
      Parameters:
        StagePara: !Ref StagePara
        ApplicationPara: !Ref ApplicationPara

  StorageLayerApplication:
    Type: AWS::Serverless::Application
    Properties:
      Location: ./storage.yaml
      Parameters:
         VPC: !GetAtt NetworkLayerApplication.Outputs.VPC
         PublicSubnetOne: !GetAtt NetworkLayerApplication.Outputs.PublicSubnetOne
         PublicSubnetTwo: !GetAtt NetworkLayerApplication.Outputs.PublicSubnetTwo
         SecurityGroup: !GetAtt NetworkLayerApplication.Outputs.ContainerSecurityGroup

  ECSServiceApplication:
    Type: AWS::Serverless::Application
    Properties:
      Location: ./ecs_segementation.yaml
      Parameters:
        StagePara: !Ref StagePara
        ApplicationPara: !Ref ApplicationPara
        EC2Role: !GetAtt RoleApplication.Outputs.EC2Role
        PublicSubnetOne: !GetAtt NetworkLayerApplication.Outputs.PublicSubnetOne
        PublicSubnetTwo: !GetAtt NetworkLayerApplication.Outputs.PublicSubnetTwo
        ContainerSecurityGroup: !GetAtt NetworkLayerApplication.Outputs.ContainerSecurityGroup
        ExecuteArn: !GetAtt RoleApplication.Outputs.ECSTask
        TaskRole: !GetAtt RoleApplication.Outputs.ECSRole
        ImageUrl: !Ref ImageSegmentUrl
        EFSAccessPoint: !GetAtt StorageLayerApplication.Outputs.AccessPoint
        EFSFileSystemId: !GetAtt StorageLayerApplication.Outputs.EFSFileSystem
        ContainerPath: !Ref ContainerPath
  ECSControllerApplication:
    Type: AWS::Serverless::Application
    Properties:
      Location: ./controller.yaml
      Parameters:
        StagePara: !Ref StagePara
        ApplicationPara: !Ref ApplicationPara
        LambdaRoleArn:  !Ref LambdaRoleArn
        CommonCodeLayerRef: !Ref CommonCodeLayerRef
        TableAnnoDataOriginalNameStream: !Ref TableAnnoDataOriginalNameStream
        AITaskDefinitionArn: !GetAtt ECSServiceApplication.Outputs.TaskAISegmenationDefinition
        AITaskECSClusterArn: !GetAtt ECSServiceApplication.Outputs.ECSCluster
        SecurityGroup: !GetAtt  NetworkLayerApplication.Outputs.ContainerSecurityGroup
        PublicSubnetOne: !GetAtt NetworkLayerApplication.Outputs.PublicSubnetOne
        PublicSubnetTwo: !GetAtt NetworkLayerApplication.Outputs.PublicSubnetTwo
        EFSAccessPoint: !GetAtt StorageLayerApplication.Outputs.AccessPointARN
        ContainerName: !GetAtt ECSServiceApplication.Outputs.ContainerName
        ContainerMount: !Ref ContainerPath
        VpcEndointSQS: !GetAtt NetworkLayerApplication.Outputs.VPCSQSEndpointDnsEntries
        TableAnnoDataOriginalName: !Ref TableAnnoDataOriginalName